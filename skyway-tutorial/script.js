'use strict';let localStream = null;let peer = null;let existingCall = null;navigator.mediaDevices.getUserMedia({video: true, audio: true})    .then(function (stream) {        // Success        $('#myStream').srcObject = stream;        localStream = stream;    }).catch(function (error) {        // Error        console.error('mediaDevice.getUserMedia() error:', error);        return;    });peer = new Peer({    key: 'apikey',    debug: 3});peer.on('open', function(){    $('#my-id').text(peer.id);});$('#make-call').submit(function(e){    e.preventDefault();    const call = peer.call($('#callto-id').val(), localStream);    setupCallEventHandlers(call);});peer.on('call', function(call){    call.answer(localStream);    setupCallEventHandlers(call);});